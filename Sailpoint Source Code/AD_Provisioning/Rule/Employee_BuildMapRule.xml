<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="Employee_BuildMapRule" type="BuildMap">
  <Description>This rule is used by the delimited file connector to build a map representation of the delimited data.</Description>
  <Signature returnType="Map">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="application">
        <Description>
          The application whose data file is being processed.
        </Description>
      </Argument>
      <Argument name="schema">
        <Description>
          The Schema currently in use.
        </Description>
      </Argument>
      <Argument name="state">
        <Description>
          A Map containing state information.
        </Description>
      </Argument>
      <Argument name="record">
        <Description>
          A List of data tokens parsed from the current line of the data file.
        </Description>
      </Argument>
      <Argument name="cols">
        <Description>
          A List of the columns to use.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="map">
        <Description>
          A Map of the resource object assembled from the data.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source>import sailpoint.object.*;
  
  
  import java.util.*;
  import java.text.*;
  import java.io.*;
  import sailpoint.api.*;  
  import sailpoint.object.*;
  import sailpoint.connector.DelimitedFileConnector;
	
  
  System.out.println("Context...."+context.toString());
  System.out.println("Application...."+application.toString());
  System.out.println("Schema...."+schema.toString());
	System.out.println("State...."+state.toString());
  System.out.println("Record...."+record.toString());
  System.out.println("Cols...."+cols.toString());
  
  System.out.println("Deployment Acce. Test..................");
  HashMap map = DelimitedFileConnector.defaultBuildMap(cols, record);

  String start_date=map.get("Start_Date");
  String end_date=map.get("End_Date");
  
  if(start_date!=null)
  {
    SimpleDateFormat sformat=new SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat tformat=new SimpleDateFormat("MM/dd/yyyy");
    
    Date s_date=sformat.parse(start_date);
    String sdate=tformat.format(s_date);
    map.put("Start_Date",sdate);
  }
  if(end_date!=null)
  {
    SimpleDateFormat sformat=new SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat tformat=new SimpleDateFormat("MM/dd/yyyy");
    
    Date e_date=sformat.parse(end_date);
    String edate=tformat.format(e_date);
    map.put("End_Date",edate);
  }

return map;</Source>
</Rule>